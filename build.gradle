//
// To run "entry point", use command for example:
//    gradle  gogo
// or:
//    gradle -q gogo //for quite output
// or:
// sh gradlew gogo
//

apply(plugin: 'java')

//---Kotlin Section---
apply(plugin: 'kotlin')
buildscript {
    ext.kotlin_version = '1.0.7'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
repositories {
    mavenCentral()
}
dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}
//===Kotlin Section===

//---Constants Section for "Simple Script"---
def simpleScriptConstantsJavaSrcDir = new File(project.buildDir, 'simple_script_constants_src/java/')
sourceSets { main { java { srcDirs += [simpleScriptConstantsJavaSrcDir] } } }
task simpleScriptConstants {
    ext._normalize_path = { File fileObject -> return fileObject.absolutePath.replaceAll('\\\\', '/') }
    doFirst {
        File workPlaceDir = project.file('.') // Now this is folder where placed current 'build.gradle' file
        def constantsJavaFile = new File(simpleScriptConstantsJavaSrcDir, 'simple_script_constants/SimpleScriptConstants.java')
        constantsJavaFile.parentFile.mkdirs()
        constantsJavaFile.write """package simple_script_constants;
//simpleScriptConstantsJavaSrcDir is: ${ext._normalize_path(simpleScriptConstantsJavaSrcDir)}
public interface SimpleScriptConstants { 
    String WORK_PLACE_PATH = "${ext._normalize_path(workPlaceDir)}";
}"""
    }
}
project.afterEvaluate { prj -> prj.tasks.findByName("compileJava").dependsOn simpleScriptConstants }//https://docs.gradle.org/current/userguide/build_lifecycle.html#sec:project_evaluation
//===Constants Section for "Simple Script"===

task gogo(type: JavaExec, dependsOn: 'classes') {
    logger.lifecycle " task gogo: configuration time"
    doFirst {
        logger.lifecycle " task gogo: run task time"
//        main('oo.gogo.Main') //src/main/java/oo/gogo/Main.java
        main('oo.gogo.MainKt') //src/main/kotlin/oo/gogo/Main.kt
        classpath(sourceSets.main.runtimeClasspath)
        args(
                "${project.file('.')}", // Folder where placed current 'build.gradle' file.
                'Some custom string',
                "Gradle Version: ${gradle.gradleVersion}" //Version of gradle runtime.
        )
    }
}
